services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./order/backend/src/init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    build: 
      context: ./order/backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: orders_db
      POSTGRES_HOST: postgres
      PORT: 4000
    ports:
      - "4000:4000"
    volumes:
      - ./order/backend/src:/app/src
    command: npm run dev

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NUXT_PUBLIC_API_URL: http://backend:4000/graphql
      HOST: "0.0.0.0"
    volumes:
      - ./webapp/components:/app/components
      - ./webapp/pages:/app/pages
      - ./webapp/utils:/app/utils
      - ./webapp/queries:/app/queries
    command: npm run dev
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/postgres-data' 